@page "/login"
@using System.ComponentModel.DataAnnotations
@rendermode InteractiveServer
@inject IUserService UserService
@inject IAuthenticationService AuthService
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

<PageTitle>ورود - قدرا تیک</PageTitle>

<div class="row justify-content-center min-vh-100 align-items-center">
    <div class="col-md-4">
        <div class="card shadow">
            <div class="card-header text-center bg-primary text-white">
                <h3>ورود به سیستم</h3>
                <small>سیستم مدیریت تیکت قدرا</small>
            </div>
            <div class="card-body">
                <EditForm Model="@loginModel" OnValidSubmit="HandleLogin" FormName="LoginForm">
                    <DataAnnotationsValidator />
                    <ValidationSummary class="alert alert-danger" />

                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <div class="alert alert-danger">@errorMessage</div>
                    }

                    <div class="mb-3">
                        <label class="form-label">نام کاربری</label>
                        <InputText @bind-Value="loginModel.Username" class="form-control" placeholder="admin1" />
                        <ValidationMessage For="@(() => loginModel.Username)" />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">رمز عبور</label>
                        <InputText @bind-Value="loginModel.Password" type="password" class="form-control" placeholder="admin123" />
                        <ValidationMessage For="@(() => loginModel.Password)" />
                    </div>

                    <div class="mb-3 form-check">
                        <InputCheckbox @bind-Value="loginModel.RememberMe" class="form-check-input" id="rememberMe" />
                        <label class="form-check-label" for="rememberMe">
                            مرا به خاطر بسپار
                        </label>
                    </div>

                    <div class="d-grid">
                        <button type="submit" class="btn btn-primary" disabled="@isLoading">
                            @if (isLoading)
                            {
                                <span class="spinner-border spinner-border-sm me-2"></span>
                                <span>در حال ورود...</span>
                            }
                            else
                            {
                                <i class="bi bi-box-arrow-in-right me-2"></i>
                                <span>ورود</span>
                            }
                        </button>
                    </div>
                </EditForm>

                <hr class="my-4">

                <div class="text-center">
                    <h6 class="text-muted">حساب‌های تستی:</h6>
                    <div class="row">
                        <div class="col-6">
                            <small class="text-muted d-block"><strong>مدیر:</strong></small>
                            <small class="text-muted">admin1 / admin123</small>
                        </div>
                        <div class="col-6">
                            <small class="text-muted d-block"><strong>پشتیبان:</strong></small>
                            <small class="text-muted">support1 / support123</small>
                        </div>
                    </div>
                    <div class="row mt-2">
                        <div class="col-12">
                            <small class="text-muted d-block"><strong>کاربر:</strong></small>
                            <small class="text-muted">user1 / user123</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private LoginModel loginModel = new();
    private bool isLoading = false;
    private string errorMessage = string.Empty;

    public class LoginModel
    {
        [Required(ErrorMessage = "نام کاربری الزامی است")]
        public string Username { get; set; } = string.Empty;

        [Required(ErrorMessage = "رمز عبور الزامی است")]
        public string Password { get; set; } = string.Empty;

        public bool RememberMe { get; set; } = false;
    }

    private async Task HandleLogin()
    {
        isLoading = true;
        errorMessage = string.Empty;

        try
        {
            // Validate user credentials
            var user = await UserService.LoginAsync(loginModel.Username, loginModel.Password);

            if (user != null)
            {
                // Clear client storage
                await JSRuntime.InvokeVoidAsync("localStorage.clear");
                await Task.Delay(100);

                // Sign in using AuthenticationService
                var success = await AuthService.SignInAsync(user, loginModel.RememberMe);

                if (success)
                {
                    // Redirect to home page with force refresh
                    Navigation.NavigateTo("/", true);
                }
                else
                {
                    errorMessage = "خطا در ورود به سیستم. لطفاً دوباره تلاش کنید.";
                }
            }
            else
            {
                errorMessage = "نام کاربری یا رمز عبور اشتباه است.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"خطا در ورود: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }
}