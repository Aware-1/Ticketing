@page "/logout"
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Cookies
@inject NavigationManager Navigation
@inject IHttpContextAccessor HttpContextAccessor

<div class="d-flex justify-content-center align-items-center min-vh-100">
    <div class="text-center">
        <div class="spinner-border text-primary" role="status" style="width: 3rem; height: 3rem;">
            <span class="visually-hidden">در حال خروج...</span>
        </div>
        <p class="mt-3 fs-5">در حال خروج از سیستم...</p>
        <small class="text-muted">لطفاً صبر کنید...</small>

        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="alert alert-danger mt-3">@errorMessage</div>
        }

        @if (!string.IsNullOrEmpty(successMessage))
        {
            <div class="alert alert-success mt-3">@successMessage</div>
        }
    </div>
</div>

@code {
    private string errorMessage = string.Empty;
    private string successMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Wait a moment for UI to show
            await Task.Delay(1000);

            // Get actual HttpContext
            var httpContext = HttpContextAccessor.HttpContext;

            if (httpContext != null)
            {
                // Sign out using real HttpContext
                await httpContext.SignOutAsync(CookieAuthenticationDefaults.AuthenticationScheme);

                successMessage = "خروج موفقیت‌آمیز! در حال انتقال...";

                // Wait a bit more to show success message
                await Task.Delay(1500);

                // Redirect to login
                Navigation.NavigateTo("/login", true);
            }
            else
            {
                errorMessage = "خطا در دسترسی به HttpContext.";
                await Task.Delay(2000);
                Navigation.NavigateTo("/login", true);
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"خطا در خروج: {ex.Message}";
            Console.WriteLine($"Logout error: {ex.Message}");

            // Force navigation even if there's an error
            await Task.Delay(2000);
            Navigation.NavigateTo("/login", true);
        }
    }
}