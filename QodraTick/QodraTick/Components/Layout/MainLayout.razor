@using Microsoft.AspNetCore.Components.Authorization
@using Service.IService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IUserService UserService
@inherits LayoutComponentBase

<div class="page">
    <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
        <div class="container-fluid">
            <a class="navbar-brand" href="/">قدرا تیک</a>
            
            <div class="navbar-nav me-auto">
                <AuthorizeView>
                    <Authorized>
                        <span class="navbar-text me-3">سلام @GetDisplayName(context.User)</span>
                        <span class="badge bg-light text-dark me-2">@GetUserRole()</span>
                    </Authorized>
                    <NotAuthorized>
                        <span class="navbar-text">لطفاً وارد شوید</span>
                    </NotAuthorized>
                </AuthorizeView>
            </div>
        </div>
    </nav>

    <div class="container-fluid">
        <div class="row">
            <nav class="col-md-3 col-lg-2 d-md-block bg-light sidebar collapse">
                <div class="position-sticky pt-3">
                    <AuthorizeView>
                        <Authorized>
                            @if (currentUser != null)
                            {
                                @switch (currentUser.Role)
                                {
                                    case UserRole.User:
                                        <UserNavigation />
                                        break;
                                    case UserRole.Support:
                                        <SupportNavigation />
                                        break;
                                    case UserRole.Admin:
                                        <AdminNavigation />
                                        break;
                                }
                            }
                        </Authorized>
                        <NotAuthorized>
                            <div class="alert alert-info">
                                برای نمایش منو وارد شوید
                            </div>
                        </NotAuthorized>
                    </AuthorizeView>
                </div>
            </nav>

            <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
                @Body
            </main>
        </div>
    </div>
</div>

<div id="blazor-error-ui">
    خطایی رخ داده است. این برنامه ممکن است تا زمان بارگذاری مجدد پاسخ ندهد.
    <a href="" class="reload">بارگذاری مجدد</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    private User? currentUser;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        
        if (authState.User.Identity?.IsAuthenticated == true)
        {
            var username = authState.User.Identity.Name;
            var displayName = username; // فعلاً از username استفاده می‌کنیم
            
            // ایجاد یا بروزرسانی کاربر در دیتابیس
            currentUser = await UserService.CreateOrUpdateUserAsync(username!, displayName!);
        }
    }

    private string GetDisplayName(ClaimsPrincipal user)
    {
        return user.Identity?.Name ?? "ناشناس";
    }

    private string GetUserRole()
    {
        return currentUser?.Role switch
        {
            UserRole.User => "کاربر",
            UserRole.Support => "پشتیبان",
            UserRole.Admin => "ادمین",
            _ => "نامشخص"
        };
    }
}
